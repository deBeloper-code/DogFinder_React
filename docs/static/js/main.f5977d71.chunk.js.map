{"version":3,"sources":["helpers/conectApiListAll.js","components/SearchBreed.js","hooks/useFetchListBreed.js","helpers/conectWithApi.js","components/BreedGrid.js","hooks/useFetchBreed.js","DogFinder.js","index.js"],"names":["conectApiListAll","a","fetch","resp","json","breeds","SearchBreed","setBreed","useState","inputValue","setInputValue","clickOrWrite","setclickOrWrite","data","loading","state","setState","useEffect","then","message","status","useFetchListBreed","nombresRazas","key","push","nuevaPerros","k","indexOf","listaDeRazas","scroll","window","top","behavior","escoger","e","target","innerHTML","nuevaPerrosSI","map","perro","onClick","length","Math","random","lista","setlista","razas","className","onSubmit","preventDefault","type","value","onChange","toLowerCase","conectApi","breed","url","encodeURI","datos","BreedGrid","imagenes","useFetchBreed","images","img","src","alt","setTimeout","document","location","reload","DogFinder","loop","autoPlay","muted","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f5977d71.chunk.js","sourcesContent":["\r\n\r\nexport const conectApiListAll = async ()=>{\r\n\r\n    const url = `https://dog.ceo/api/breeds/list/all`;\r\n    const resp = await fetch(url);\r\n    const breeds = await resp.json();\r\n\r\n    \r\n\r\n\r\n    return breeds\r\n\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { useFetchListBreed } from \"../hooks/useFetchListBreed\";\r\n\r\nconst SearchBreed = ({ setBreed }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  //Va a decidir si se dio click o está escribiendo\r\n  const [clickOrWrite, setclickOrWrite] = useState(1);\r\n\r\n  const { data: breeds } = useFetchListBreed();\r\n\r\n  let nombresRazas = [];\r\n\r\n  for (const key in breeds) {\r\n    nombresRazas.push(key);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    setBreed([inputValue]);\r\n    setclickOrWrite(1);\r\n    e.preventDefault();\r\n    scroll();\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setclickOrWrite(2);\r\n    setInputValue(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const nuevaPerros = [];\r\n\r\n  for (const k in nombresRazas) {\r\n    if (inputValue !== \"\") {\r\n      if (nombresRazas[k].indexOf(inputValue) !== -1) {\r\n        nuevaPerros.push(nombresRazas[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const scroll = () => {\r\n    window.scroll({\r\n      top: 700,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  // const [chose, setchose] = useState()\r\n  const escoger = (e) => {\r\n    setInputValue(e.target.innerHTML);\r\n  };\r\n\r\n  let nuevaPerrosSI = nuevaPerros.map((perro) => {\r\n    return (\r\n      <li onClick={escoger} key={nuevaPerros.length * Math.random(159)}>\r\n        {perro}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  //Cuando toque el input se motrarán las razas que hay\r\n  let listaDeRazas;\r\n\r\n  const [lista, setlista] = useState(\"\");\r\n  const handleInputClick = (e) => {\r\n    setlista(e.type);\r\n    setclickOrWrite(3);\r\n  };\r\n\r\n  if (lista === \"click\") {\r\n    listaDeRazas = nombresRazas.map((razas) => {\r\n      return (\r\n        <li onClick={escoger} key={razas.length * Math.random(159)}>\r\n          {razas}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"containerSeraching\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInput}\r\n          onClick={handleInputClick}\r\n         \r\n        />\r\n        <button className=\"buscar\">Search</button>\r\n      </form>\r\n      {clickOrWrite === 3 ? (\r\n        <div className=\"content-options\">\r\n          <ul>{listaDeRazas}</ul>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {clickOrWrite === 2 ? (\r\n        <div className=\"content-options\">\r\n          <ul>{nuevaPerrosSI}</ul>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBreed;\r\n","import { conectApiListAll } from \"../helpers/conectApiListAll\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const useFetchListBreed = () =>{\r\n\r\n\r\n    const [ state, setState] = useState({\r\n        data:[],\r\n        loading: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        conectApiListAll()\r\n        .then(({message, status})=>{\r\n            setState({\r\n                data: message,\r\n                loading: status\r\n            })\r\n          \r\n        });\r\n\r\n        \r\n    }, [])\r\n\r\n\r\n    return state;\r\n}","\r\n\r\n\r\nexport const conectApi = async( breed )=>{\r\n    \r\n    // const url = `https://dog.ceo/api/breed/african/images`;\r\n    const url = `https://dog.ceo/api/breed/${ encodeURI(breed) }/images`;\r\n    \r\n    const resp = await fetch(url);\r\n    const datos = await resp.json();\r\n    \r\n   \r\n    \r\n \r\n    return datos\r\n        \r\n    \r\n    \r\n}","import React from 'react';\r\nimport { useFetchBreed } from '../hooks/useFetchBreed';\r\n\r\n\r\nconst BreedGrid = ({breed}) =>{\r\n\r\n    const {data: images, loading} = useFetchBreed(breed);\r\n\r\n\r\n\r\n\r\nlet imagenes;\r\n\r\n   if (loading === 'success') {\r\n        imagenes =  <div className='ContentImagenes'>\r\n       {images.map(img=>{\r\n           return(<img className='Imagenes' key={images.length * Math.random(115)} src={img} alt={breed}/>)\r\n           \r\n       })}\r\n       </div> \r\n   }\r\n       \r\n   if (loading === 'error') {\r\n       imagenes = <div className='ErrorNohay'>\r\n                    \r\n                <h1 className='ErrorH1' >Lo sentimos no encontramos esa raza....!</h1>\r\n                \r\n                    </div>\r\n\r\n        setTimeout(() => {\r\n            document.location.reload();\r\n        }, 2000);\r\n   }\r\n\r\n\r\n    return(\r\n        <>\r\n            {imagenes}   \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default BreedGrid;","import {useState, useEffect} from 'react';\r\nimport { conectApi } from '../helpers/conectWithApi';\r\n\r\n\r\nexport const useFetchBreed = (breed) =>{\r\n\r\n\r\n    const [ state, setState] = useState({\r\n        data:[],\r\n        loading: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        conectApi(breed)\r\n        .then(({message, status})=>{\r\n            setState({\r\n                data: message,\r\n                loading: status\r\n            })\r\n          \r\n        });\r\n\r\n        \r\n    }, [breed])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport SearchBreed from \"./components/SearchBreed\";\r\nimport BreedGrid from \"./components/BreedGrid\";\r\n\r\nconst DogFinder = () => {\r\n  const [breed, setBreed] = useState([\"akita\"]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ContentVideo\">\r\n        <video loop autoPlay muted className=\"myVideo\">\r\n          <source src=\"./pets.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n\r\n        <div className=\"PrincipalWithInput\">\r\n          <h1> Search some breed </h1>\r\n          <SearchBreed setBreed={setBreed} />\r\n        </div>\r\n      </div>\r\n\r\n      <BreedGrid breed={breed} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DogFinder;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport DogFinder from './DogFinder';\r\n\r\n\r\nReactDOM.render(<DogFinder />,document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}